{"version":3,"file":"frappe-gantt.min.js","sources":["../src/core/utils/date.js","../src/core/utils/svg.js","../src/ui/components/Bar.js","../src/ui/components/Arrow.js","../src/ui/components/Popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nexport default {\n    parse_duration(duration) {\n        const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\n        const matches = regex.exec(duration);\n\n        if (matches !== null) {\n            if (matches[2] === 'y') {\n                return { duration: parseInt(matches[1]), scale: `year` };\n            } else if (matches[2] === 'm') {\n                return { duration: parseInt(matches[1]), scale: `month` };\n            } else if (matches[2] === 'd') {\n                return { duration: parseInt(matches[1]), scale: `day` };\n            } else if (matches[2] === 'h') {\n                return { duration: parseInt(matches[1]), scale: `hour` };\n            } else if (matches[2] === 'min') {\n                return { duration: parseInt(matches[1]), scale: `minute` };\n            } else if (matches[2] === 's') {\n                return { duration: parseInt(matches[1]), scale: `second` };\n            } else if (matches[2] === 'ms') {\n                return { duration: parseInt(matches[1]), scale: `millisecond` };\n            }\n        }\n    },\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map((val) => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD', lang = 'en') {\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n            month: 'long',\n        });\n        const month_name = dateTimeFormat.format(date);\n        const month_name_capitalized =\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\n\n        const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS: values[6],\n            D: values[2],\n            MMMM: month_name_capitalized,\n            MMM: month_name_capitalized,\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach((key) => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        const timeUnits = {\n            milliseconds: milliseconds,\n            seconds: seconds,\n            minutes: minutes,\n            hours: hours,\n            days: days,\n            months: months,\n            years: years,\n        };\n\n        return Math.floor(timeUnits[scale]);\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0,\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds(),\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    },\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s',\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin, // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out'),\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1',\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import date_utils from '../../core/utils/date';\nimport { $, createSVG, animateSVG } from '../../core/utils/svg';\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.action_completed = false;\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.compute_x();\n        this.compute_y();\n        this.compute_duration();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.task.progress / 100) || 0;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id,\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group,\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group,\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function () {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function () {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function () {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function () {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function () {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    prepare_expected_progress_values() {\n        this.compute_expected_progress();\n        this.expected_progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.expected_progress / 100) || 0;\n    }\n\n    draw() {\n        this.draw_bar();\n        if (this.gantt.options.show_expected_progress) {\n            this.prepare_expected_progress_values();\n            this.draw_expected_progress_bar();\n        }\n        this.draw_progress_bar();\n        this.draw_label();\n        this.draw_resize_handles();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_expected_progress_bar() {\n        if (this.invalid) return;\n        this.$expected_bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.expected_progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-expected-progress',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(\n            this.$expected_bar_progress,\n            'width',\n            0,\n            this.expected_progress_width,\n        );\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n        this.$bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-progress',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group,\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    draw_resize_handles() {\n        if (this.invalid) return;\n\n        const bar = this.$bar;\n        const handle_width = 8;\n\n        createSVG('rect', {\n            x: bar.getX() + bar.getWidth() - 9,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle right',\n            append_to: this.handle_group,\n        });\n\n        createSVG('rect', {\n            x: bar.getX() + 1,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle left',\n            append_to: this.handle_group,\n        });\n\n        this.$handle_progress = createSVG('polygon', {\n            points: this.get_progress_polygon_points().join(','),\n            class: 'handle progress',\n            append_to: this.handle_group,\n        });\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        return [\n            bar_progress.getEndX() - 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX() + 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX(),\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.show_popup();\n            this.gantt.unselect_all();\n            this.group.classList.add('active');\n        });\n\n        $.on(this.group, 'dblclick', (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.gantt.trigger_event('click', [this.task]);\n        });\n    }\n\n    show_popup() {\n        if (this.gantt.bar_being_dragged) return;\n\n        const start_date = date_utils.format(\n            this.task._start,\n            'MMM D',\n            this.gantt.options.language,\n        );\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language,\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle,\n            task: this.task,\n        });\n    }\n\n    update_bar_position({ x = null, width = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map((dep) => {\n                return this.gantt.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((prev, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n        }\n        if (width) {\n            this.update_attr(bar, 'width', width);\n        }\n        this.update_label_position();\n        this.update_handle_position();\n        if (this.gantt.options.show_expected_progress) {\n            this.date_changed();\n            this.compute_duration();\n            this.update_expected_progressbar_position();\n        }\n        this.update_progressbar_position();\n        this.update_arrow_position();\n    }\n\n    date_changed() {\n        let changed = false;\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n        if (Number(this.task._start) !== Number(new_start_date)) {\n            changed = true;\n            this.task._start = new_start_date;\n        }\n\n        if (Number(this.task._end) !== Number(new_end_date)) {\n            changed = true;\n            this.task._end = new_end_date;\n        }\n\n        if (!changed) return;\n\n        this.gantt.trigger_event('date_change', [\n            this.task,\n            new_start_date,\n            date_utils.add(new_end_date, -1, 'second'),\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 1000);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\n        const new_start_date = date_utils.add(\n            this.gantt.gantt_start,\n            x_in_units * this.gantt.options.step,\n            'hour',\n        );\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n        const new_end_date = date_utils.add(\n            new_start_date,\n            width_in_units * this.gantt.options.step,\n            'hour',\n        );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_progress() {\n        const progress =\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_expected_progress() {\n        this.expected_progress =\n            date_utils.diff(date_utils.today(), this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.expected_progress =\n            ((this.expected_progress < this.duration\n                ? this.expected_progress\n                : this.duration) *\n                100) /\n            this.duration;\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = (diff / step) * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = (diff * column_width) / 30;\n        }\n        this.x = x;\n    }\n\n    compute_y() {\n        this.y =\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding);\n    }\n\n    compute_duration() {\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.gantt.view_is('Week')) {\n            rem = dx % (this.gantt.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 14\n                    ? 0\n                    : this.gantt.options.column_width / 7);\n        } else if (this.gantt.view_is('Month')) {\n            rem = dx % (this.gantt.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 60\n                    ? 0\n                    : this.gantt.options.column_width / 30);\n        } else {\n            rem = dx % this.gantt.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 2\n                    ? 0\n                    : this.gantt.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_expected_progressbar_position() {\n        if (this.invalid) return;\n        this.$expected_bar_progress.setAttribute('x', this.$bar.getX());\n        this.compute_expected_progress();\n        this.$expected_bar_progress.setAttribute(\n            'width',\n            this.gantt.options.column_width *\n                this.duration *\n                (this.expected_progress / 100) || 0,\n        );\n    }\n\n    update_progressbar_position() {\n        if (this.invalid) return;\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100),\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (label.getBBox().width > bar.getWidth()) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n\n    update_handle_position() {\n        if (this.invalid) return;\n        const bar = this.$bar;\n        this.handle_group\n            .querySelector('.handle.left')\n            .setAttribute('x', bar.getX() + 1);\n        this.handle_group\n            .querySelector('.handle.right')\n            .setAttribute('x', bar.getEndX() - 9);\n        const handle = this.group.querySelector('.handle.progress');\n        handle &&\n            handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nfunction isFunction(functionToCheck) {\n    var getType = {};\n    return (\n        functionToCheck &&\n        getType.toString.call(functionToCheck) === '[object Function]'\n    );\n}\n","import { createSVG } from '../../core/utils/svg';\n\nexport default class Arrow {\n    constructor(gantt, from_task, to_task) {\n        this.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id,\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n            this.parent.style.width = this.parent.clientWidth + 'px';\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top = position_meta.y + 'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top = '2px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n    }\n}\n","import date_utils from './core/utils/date';\nimport { $, createSVG } from './core/utils/svg';\nimport Bar from './ui/components/Bar';\nimport Arrow from './ui/components/Arrow';\nimport Popup from './ui/components/Popup';\n\nimport './infraestructure/styles/gantt.scss';\n\nconst VIEW_MODE = {\n    HOUR: 'Hour',\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nconst VIEW_MODE_PADDING = {\n    HOUR: ['7d', '7d'],\n    QUARTER_DAY: ['7d', '7d'],\n    HALF_DAY: ['7d', '7d'],\n    DAY: ['1m', '1m'],\n    WEEK: ['1m', '1m'],\n    MONTH: ['1m', '1m'],\n    YEAR: ['2y', '2y'],\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\",\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt',\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'en',\n        };\n        this.options = Object.assign({}, default_options, options);\n        for (let [key, value] of Object.entries(options.view_mode_padding)) {\n            if (typeof value === 'string') {\n                // Configure for single value given\n                options.view_mode_padding[key] = [value, value];\n            }\n        }\n\n        this.options.view_mode_padding = {\n            ...VIEW_MODE_PADDING,\n            ...options.view_mode_padding,\n        };\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            if (task.end === undefined && task.duration !== undefined) {\n                task.end = task._start;\n                let durations = task.duration.split(' ');\n\n                durations.forEach((tmpDuration) => {\n                    let { duration, scale } =\n                        date_utils.parse_duration(tmpDuration);\n                    task.end = date_utils.add(task.end, duration, scale);\n                });\n            }\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every((d) => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map((d) => d.trim())\n                        .filter((d) => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n        if (view_mode === VIEW_MODE.HOUR) {\n            this.options.step = 24 / 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n        let gantt_start, gantt_end;\n        if (!this.gantt_start) gantt_start = new Date();\n        else gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        if (!this.gantt_end) gantt_end = new Date();\n        else gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        let viewKey;\n        for (let [key, value] of Object.entries(VIEW_MODE)) {\n            if (value === this.options.view_mode) {\n                viewKey = key;\n            }\n        }\n        const [padding_start, padding_end] = this.options.view_mode_padding[\n            viewKey\n        ].map(date_utils.parse_duration);\n\n        this.gantt_start = date_utils.add(\n            gantt_start,\n            -padding_start.duration,\n            padding_start.scale,\n        );\n\n        let format_string;\n        if (this.view_is(VIEW_MODE.YEAR)) {\n            format_string = 'YYYY';\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            format_string = 'YYYY-MM';\n        } else if (this.view_is(VIEW_MODE.DAY)) {\n            format_string = 'YYYY-MM-DD';\n        } else {\n            format_string = 'YYYY-MM-DD HH';\n        }\n\n        this.gantt_start = new Date(\n            date_utils.format(\n                date_utils.add(\n                    gantt_start,\n                    -padding_end.duration,\n                    padding_end.scale,\n                ),\n                format_string,\n            ),\n        );\n        this.gantt_start.setHours(0, 0, 0, 0);\n\n        this.gantt_end = date_utils.add(\n            gantt_end,\n            padding_end.duration,\n            padding_end.scale,\n        );\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour',\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.tasks.length;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 100,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let task of this.tasks) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer,\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer,\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid,\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    //compute the horizontal x distance\n    computeGridHighlightDimensions(view_mode) {\n        let xDist = 0;\n\n        if (this.view_is(VIEW_MODE.DAY)) {\n            return (\n                (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                    this.options.step) *\n                this.options.column_width\n            );\n        }\n\n        for (let date of this.dates) {\n            const todayDate = new Date();\n            const startDate = new Date(date);\n            const endDate = new Date(date);\n            switch (view_mode) {\n                case VIEW_MODE.WEEK:\n                    endDate.setDate(date.getDate() + 7);\n                    break;\n                case VIEW_MODE.MONTH:\n                    endDate.setMonth(date.getMonth() + 1);\n                    break;\n                case VIEW_MODE.YEAR:\n                    endDate.setFullYear(date.getFullYear() + 1);\n                    break;\n            }\n            if (todayDate >= startDate && todayDate <= endDate) {\n                break;\n            } else {\n                xDist += this.options.column_width;\n            }\n        }\n        return xDist;\n    }\n\n    make_grid_highlights() {\n        // highlight today's | week's | month's | year's\n        if (\n            this.view_is(VIEW_MODE.DAY) ||\n            this.view_is(VIEW_MODE.WEEK) ||\n            this.view_is(VIEW_MODE.MONTH) ||\n            this.view_is(VIEW_MODE.YEAR)\n        ) {\n            const x = this.computeGridHighlightDimensions(\n                this.options.view_mode,\n            );\n            const y = 0;\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            let className = '';\n            switch (this.options.view_mode) {\n                case VIEW_MODE.DAY:\n                    className = 'today-highlight';\n                    break;\n                case VIEW_MODE.WEEK:\n                    className = 'week-highlight';\n                    break;\n                case VIEW_MODE.MONTH:\n                    className = 'month-highlight';\n                    break;\n                case VIEW_MODE.YEAR:\n                    className = 'year-highlight';\n                    break;\n            }\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: className,\n                append_to: this.layers.grid,\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date,\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date,\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'day');\n        }\n        const date_text = {\n            Hour_lower: date_utils.format(date, 'HH', this.options.language),\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language,\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language,\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            Hour_upper:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMMM', this.options.language)\n                    : '',\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(\n                              date,\n                              'D MMM',\n                              this.options.language,\n                          )\n                        : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25,\n        };\n\n        const x_pos = {\n            Hour_lower: this.options.column_width / 2,\n            Hour_upper: this.options.column_width * 12,\n            'Quarter Day_lower': this.options.column_width / 2,\n            'Quarter Day_upper': this.options.column_width * 2,\n            'Half Day_lower': this.options.column_width / 2,\n            'Half Day_upper': this.options.column_width,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: (this.options.column_width * 30) / 2,\n            Week_lower: 0,\n            Week_upper: (this.options.column_width * 4) / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: (this.options.column_width * 12) / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: (this.options.column_width * 30) / 2,\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map((task_id) => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index], // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter((arrow) => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg.querySelector('.grid .grid-row')\n            ? this.$svg.querySelector('.grid .grid-row').getAttribute('width')\n            : 0;\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour',\n        );\n\n        const scroll_pos =\n            (hours_before_first_task / this.options.step) *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            },\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id),\n            ];\n            bars = ids.map((id) => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx,\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx,\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', (e) => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach((bar) => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', (e) => {\n            this.bar_being_dragged = null;\n            bars.forEach((bar) => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter((d) => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find((task) => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html,\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        if (!this.tasks.length) return new Date();\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date,\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","timeUnits","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","show_expected_progress","draw_expected_progress_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","_start","language","_end","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","step","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","VIEW_MODE_PADDING","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","entries","view_mode_padding","start","undefined","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","viewKey","padding_start","padding_end","setHours","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","computeGridHighlightDimensions","xDist","todayDate","startDate","endDate","setDate","setMonth","setFullYear","className","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","apply","prev_date"],"mappings":"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"}